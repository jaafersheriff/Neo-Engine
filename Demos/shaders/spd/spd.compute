
layout(binding = 0, r16f) volatile uniform image2D dst;

layout(binding = 1) uniform sampler2D src;
uniform vec2 textureDimensions;
uniform int currentMip;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main() {
#ifdef RAW_BLIT
	float depth = textureLod(src, vec2(gl_GlobalInvocationID.xy / textureDimensions), 0).r;
#else
	float d_a = textureLod(src, vec2((gl_GlobalInvocationID.xy + ivec2(0, 0)) / textureDimensions), currentMip-1).r;
	float d_b = textureLod(src, vec2((gl_GlobalInvocationID.xy + ivec2(1, 1)) / textureDimensions), currentMip-1).r;
	float d_c = textureLod(src, vec2((gl_GlobalInvocationID.xy + ivec2(1, 0)) / textureDimensions), currentMip-1).r;
	float d_d = textureLod(src, vec2((gl_GlobalInvocationID.xy + ivec2(0, 1)) / textureDimensions), currentMip-1).r;

	float depth = max(d_a, max(d_b, max(d_c, d_d)));
	// TODO - odd width/height - 

#endif
	imageStore(dst, ivec2(gl_GlobalInvocationID.xy), vec4(depth, 0, 0, 1));
	return;

}