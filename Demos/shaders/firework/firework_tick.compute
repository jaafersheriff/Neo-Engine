
struct Data {
	vec3 position;
	vec3 velocity;
	float intensity;
	float unused;
};
layout(std140, binding = 0) coherent buffer Buffer {
	Data data[];
};

uniform vec3 lightPos;
uniform float timestep;

layout (local_size_x = 16, local_size_y = 1, local_size_z = 1) in;
void main()
{
	Data localData = data[gl_GlobalInvocationID.x];

#ifdef INIT
	localData.position = lightPos;
	localData.velocity = vec3(0,0,0);
	localData.intensity = 1.0;
#else
	localData.velocity.y -= 9.8 * timestep;
	localData.position += localData.velocity * timestep;
	localData.intensity *= 0.9; // TODO decay uniform?
#endif

	data[gl_GlobalInvocationID.x] = localData;

}
