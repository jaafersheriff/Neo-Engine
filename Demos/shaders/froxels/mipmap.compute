
layout (local_size_x = 1, local_size_y = 1) in;
layout(rgba32f, binding = 0) uniform readonly image3D inMip;
layout(rgba32f, binding = 1) uniform writeonly image3D outMip;

void main() {
	// get index in global work group i.e x,y position
	ivec3 center = ivec2(gl_GlobalInvocationID.xyz);
	ivec3 inDims = imageSize(inMip);
	ivec3 outDims = imageSize(outMip);


	// TODO - support alpha later
	vec3 color = vec3(0);
	int tapCount = 0;
	for (int x = -1; x <= 1; x++) {
		for (int y = -1; y <= 1; y++) {
			for (int z = -1; z <= 1; z++) {
				ivec3 offset = ivec3(x, y, z);
				ivec3 index = center + offset;
				index = clamp(index, ivec3(0), inDims);

				vec4 inColor = imageLoad(index);
				if (inColor.a != 0.0) {
					tapCount++;
					color.rgb += inColor.rgb;
				}
			}
		}
	}

	imageStore(outMip, center / 2, vec4(color, 1.0));
}